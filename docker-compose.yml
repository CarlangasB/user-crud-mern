version: '3.8'

services:
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    networks:
      - backend-network
  
  api:
    depends_on:
      - mongodb
      - postgres
    build: ./api
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_HOST=$POSTGRES_HOST
    networks:
      - backend-network
      - frontend-network
    volumes:
      - ./api:/api

  frontend:
    depends_on:
      - api
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      args:
        - REACT_APP_API_BASE_URL=$CLIENT_API_BASE_URL
    ports:
      - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
    networks:
      - frontend-network
    command: npm start
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
      - /app/node_modules

  postgres:
    image: 'postgres:latest'
    restart: unless-stopped
    env_file: ./.env
    environment:
        - POSTGRES_USER=$POSTGRES_USER
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_DB=$POSTGRES_DB
        - POSTGRES_HOST=$POSTGRES_HOST
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    volumes:
      - ./postgres:/var/lib/postgresql/pgdata
    networks:
      - backend-network

volumes: 
  db:

networks:
  backend-network:
  frontend-network: